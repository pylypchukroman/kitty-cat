{"version":3,"file":"static/js/168.5de9ec41.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/GalleryPage/GalleryPage.module.css?aca0","webpack://react-homework-template/./src/components/Gallery/Gallery.module.css?dbe6","components/Gallery/Gallery.jsx","pages/GalleryPage/GalleryPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"hero\":\"GalleryPage_hero__nFLFc\",\"leftSide\":\"GalleryPage_leftSide__KekXL\",\"rightSide\":\"GalleryPage_rightSide__F3siY\",\"wrapper\":\"GalleryPage_wrapper__liMfH\"};","// extracted by mini-css-extract-plugin\nexport default {\"navBar\":\"Gallery_navBar__kJPh-\",\"navWrapper\":\"Gallery_navWrapper__+cr0d\",\"returnBtnWrapper\":\"Gallery_returnBtnWrapper__el4LU\",\"returnBtnImg\":\"Gallery_returnBtnImg__boRsm\",\"wrapper\":\"Gallery_wrapper__7T3jV\",\"navBarText\":\"Gallery_navBarText__4UbOV\",\"upoadBtn\":\"Gallery_upoadBtn__EYBD4\",\"uploadIcon\":\"Gallery_uploadIcon__Vxhi8\",\"uloadBtnText\":\"Gallery_uloadBtnText__X0TUM\",\"selectWrapper\":\"Gallery_selectWrapper__o6-Bc\",\"label\":\"Gallery_label__9zdcj\",\"Select\":\"Gallery_Select__qJyW8\",\"orderAndType\":\"Gallery_orderAndType__43UpX\",\"breedAndLimit\":\"Gallery_breedAndLimit__lToGn\",\"gallery\":\"Gallery_gallery__RNraJ\",\"item\":\"Gallery_item__95Mj2\",\"galleryImg\":\"Gallery_galleryImg__bY52d\"};","import style from './Gallery.module.css';\nimport { useLocation } from 'react-router';\nimport HistoryBar from 'components/HistoryBar/HistoryBar';\nimport sprite from '../../icons/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport { getGallery } from 'utils/CatAPI';\n\nconst Gallery = () => {\n  let location = useLocation();\n  const curlocation = location.pathname.replace('/', '');\n  const [order, setOrder] = useState('random');\n  const [type, setType] = useState('all');\n  const [limit, setLimit] = useState('20');\n  const [gallery, setGallery] = useState([]);\n\n  const changeLimit = newLimit => {\n    setLimit(newLimit);\n  };\n  const changeType = newType => {\n    setType(newType);\n  };\n  const changeOrder = newOrder => {\n    setOrder(newOrder);\n  };\n\n  useEffect(() => {\n    getGallery(type, order, limit).then(({ data }) => setGallery(data));\n  }, [type, order, limit]);\n\n  return (\n    <>\n      <div className={style.navBar}>\n        <div className={style.navWrapper}>\n          <HistoryBar currentLocation={curlocation} />\n          <button type=\"button\" className={style.upoadBtn}>\n            <svg className={style.uploadIcon}>\n              <use href={sprite + '#icon-upload'}></use>\n            </svg>\n            <span className={style.uloadBtnText}>UPLOAD</span>\n          </button>\n        </div>\n        <div className={style.selectWrapper}>\n          <div className={style.orderAndType}>\n            <form>\n              <label className={style.label}>\n                ORDER\n                <select\n                  className={style.Select}\n                  onChange={event => changeOrder(event.target.value)}\n                  value={order}\n                >\n                  <option value=\"RANDOM\">Random</option>\n                  <option value=\"DESC\">Desc</option>\n                  <option value=\"ASC\">Asc</option>\n                </select>\n              </label>\n            </form>\n            <form>\n              <label className={style.label}>\n                TYPE\n                <select\n                  className={style.Select}\n                  onChange={event => changeType(event.target.value)}\n                  value={type}\n                >\n                  <option value=\"jpg,png,gif\">All</option>\n                  <option value=\"jpg,png\">Static</option>\n                  <option value=\"gif\">Animated</option>\n                </select>\n              </label>\n            </form>\n          </div>\n          <div className={style.breedAndLimit}>\n            <form>\n              <label className={style.label}>\n                BREED\n                <select className={style.Select}>\n                  <option value=\"none\">None</option>\n                  <option value=\"abyssinian\">Abyssinian</option>\n                  <option value=\"dengal\">Bengal</option>\n                  <option value=\"agean\">Agean</option>\n                </select>\n              </label>\n            </form>\n            <form>\n              <label className={style.label}>\n                LIMIT\n                <select\n                  className={style.Select}\n                  onChange={event => changeLimit(event.target.value)}\n                  value={limit}\n                >\n                  <option value=\"5\">5 items per page</option>\n                  <option value=\"10\">10 items per page</option>\n                  <option value=\"15\">15 items per page</option>\n                  <option value=\"20\">20 items per page</option>\n                </select>\n              </label>\n            </form>\n          </div>\n        </div>\n        <ul className={style.gallery}>\n          {gallery &&\n            gallery.map(item => (\n              <li key={item.id} className={style.item}>\n                <img\n                  className={style.galleryImg}\n                  src={item.url}\n                  width=\"100%\"\n                  height=\"100%\"\n                  alt={item.name}\n                />\n              </li>\n            ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Gallery;\n","import styles from './GalleryPage.module.css';\nimport Navigation from 'components/Navigation/Navigation';\nimport Gallery from 'components/Gallery/Gallery';\n\nconst GalleryPage = () => {\n  return (\n    <div className={styles.hero}>\n      <div className={styles.leftSide}>\n        <div className={styles.wrapper}>\n          <Navigation />\n        </div>\n      </div>\n      <div className={styles.rightSide}>\n        <Gallery />\n      </div>\n    </div>\n  );\n};\n\nexport default GalleryPage;\n"],"names":["curlocation","useLocation","pathname","replace","useState","order","setOrder","type","setType","limit","setLimit","gallery","setGallery","useEffect","getGallery","then","data","className","style","HistoryBar","currentLocation","href","sprite","onChange","event","newOrder","target","value","newType","newLimit","map","item","src","url","width","height","alt","name","id","styles","Navigation"],"sourceRoot":""}